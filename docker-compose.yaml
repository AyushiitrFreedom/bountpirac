version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bountpirac
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nextjs_build:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
      args:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
        POSTGRES_DB: bountpirac
        DATABASE_URL: postgres://postgres:password@postgres:5432/bountpirac
    volumes:
      - nextjs_build:/app/.next
    networks:
      - app-network

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
      args:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
        POSTGRES_DB: bountpirac
        DATABASE_URL: postgres://postgres:password@postgres:5432/bountpirac
    volumes:
      - nextjs_build:/app/.next
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      nextjs_build:
        condition: service_completed_successfully
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  nextjs_build:
